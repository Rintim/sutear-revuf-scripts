import{h as A,render as D}from"preact";import{h as p,Fragment as H}from"preact";import{useSignal as v,useComputed as P,useSignalEffect as k}from"@preact/signals";var m=class{promise;resolve;lock(){this.promise||(this.promise=new Promise(r=>void(this.resolve=r)))}unlock(){this.promise&&(this.resolve?.(),this.resolve=void 0,this.promise=void 0)}wait(){return this.promise??Promise.resolve()}};function w(n){let r=navigator.hardwareConcurrency,e=v([]),t=v({}),o=P(()=>{let l=[],i=t.value;for(let u of e.value)l.push(p("li",null,u,": ",i[u],"%"));return l}),a=new m;return k(()=>{e.value.length>r?a.lock():a.unlock()}),queueMicrotask(async()=>{let l=new Map,i=n.files.slice(0),u=i.length,y=0;for(;i.length;){await a.wait();let[s,L]=i.shift(),b=L.url();try{let d=await fetch(b,{credentials:"same-origin",headers:new Headers({"User-Agent":navigator.userAgent})}),c=0,M=parseInt(d.headers.get("content-length")),f=d.body.getReader(),g=[];t.value={...t.value,name:0},e.value=[...e.value,s],f.read().then(function F({value:h,done:C}){if(C){l.set(s,new Blob(g)),t.value={...t.value,name:void 0},delete t.value[s],e.value=e.value.filter(E=>E!=s),++y>=u&&n.onFinished(l);return}return g.push(h),c+=h.byteLength,t.value={...t.value,name:Math.floor(c/M*100)/100},f.read().then(F)})}catch(d){console.error(`${s}: ${d}`)}}}),p(H,null,p("h1",null,"Current Downloading"),p("ul",null,o))}async function j(n,r="game",e=document.body){let t=Object.entries(n),o=Array.from(e.childNodes).filter(i=>i instanceof HTMLElement),a=S(o),l=await T(t,e);console.log(l)}function S(n){return n.map(r=>{let e=r.hidden;return r.hidden=!0,e})}async function T(n,r=document.body){let e=document.createElement("main");e.style.width="100%",e.style.height="100%",e.style.backgroundColor="white",r.appendChild(e),e.innerHTML="<p>Current Downloading:</p>";let t=await new Promise(o=>void D(A(w,{files:n,onFinished:o}),e));return e.remove(),t}export{j as downloadFiles};
//# sourceMappingURL=mod.js.map
